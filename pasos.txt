crear router
  ng g m appRouter --flat


agregar bootstrap
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">


crear modulo shared
  ng g m shared

crear componente sdiemenu
  ng g c shared/sidemenu --skip-Tests -is


crear modulo template con router
  ng g m template --routing

crear modulo reactive con router
  ng g m reactive --routing

crear componente basicos
  ng g c reactive/basicos --skip-Tests -is

crear componente dinamicos
  ng g c reactive/dinamicos --skip-Tests -is

crear componente switches
  ng g c reactive/switches --skip-Tests -is

crear componente basicos template
  ng g c template/basicos --skip-Tests -is

crear componente dinamicos template
  ng g c template/dinamicos --skip-Tests -is

crear componente switches template
  ng g c template/switches --skip-Tests -is


crear carpeta template/directives
  crear archivo custom-min.directive.ts
    agregar diretiva a template.module [declarations]



Formularios Reactivos
  importar en reactive.mudules.ts
    import { ReactiveFormsModule } from '@angular/forms';

      imports: [
      CommonModule,
      ReactiveRoutingModule,
      ReactiveFormsModule
    ]

crear Modulo y ruta de auth
  ng g m auth --routing

crear componente registro y login dentro de pages(crear carpeta pages)
  ng g c auth/registro --skip-Tests -is
  ng g c auth/login --skip-Tests -is


Crear carpeta validator en shared
  y el archivo validaciones.ts


Crear servicio para las validaciones
  ng g s shared/validator --skip-Tests


Agregar a app.module.ts
  import { HttpClientModule } from '@angular/common/http';
    imports: [

      HttpClientModule
    ],

Crear servicio emalValidator
  ng g s shared/validator/emailValidator --skip-Tests
